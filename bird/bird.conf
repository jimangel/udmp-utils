#  the Internet Assigned Numbers Authority (IANA) reserved 1,023 ASNs (64512 to 65534) for private use.
define my_asn = 65000;
define metallb_asn = 65001;

# Change this into your BIRD router ID. It's a world-wide unique identification
# of your router, usually one of router's IPv4 addresses.
router id 192.168.7.1;

# The Device protocol is not a real routing protocol. It doesn't generate any
# routes and it only serves as a module for getting information about network
# interfaces from the kernel.
protocol device {
}

# The Kernel protocol is not a real routing protocol. Instead of communicating
# with other routers in the network, it performs synchronization of BIRD's
# routing tables with the OS kernel.
protocol kernel {
        ipv4 {             
              import all;      
              export all;  # Actually insert routes into the kernel routing table
        };
}

protocol bgp controlplane_01 {
        neighbor 192.168.65.11 as metallb_asn;  # Our neighbor ...
        multihop;                               # ... which is connected indirectly, other option is "direct;"

        ipv4 {
         import all;                            # Get routes, don't send routes
         export none;
        };
}

protocol bgp controlplane_02 {
        neighbor 192.168.80.38 as metallb_asn;  # Our neighbor ...
        multihop;                               # ... which is connected indirectly, other option is "direct;"

        ipv4 {
         import all;
         export none;
        };
}

protocol bgp controlplane_03 {
        neighbor 192.168.126.60 as metallb_asn;  # Our neighbor ...
        multihop;                               # ... which is connected indirectly, other option is "direct;"

        ipv4 {
         import all;
         export none;
        };
}

protocol bgp node_01 {
        neighbor 192.168.74.115 as metallb_asn;  # Our neighbor ...
        multihop;                               # ... which is connected indirectly, other option is "direct;"
        
        ipv4 {
         import all;
         export none;
        };
}

protocol bgp node_02 {
        neighbor 192.168.68.65 as metallb_asn;  # Our neighbor ...
        multihop;                               # ... which is connected indirectly, other option is "direct;"

        ipv4 {
         import all;
         export none;
        };
}

protocol bgp node_03 {
        neighbor 192.168.93.163 as metallb_asn;  # Our neighbor ...
        multihop;                               # ... which is connected indirectly, other option is "direct;"
        
        ipv4 {
         import all;
         export none;
        };
}

protocol bgp node_04 {
        neighbor 192.168.127.21 as metallb_asn;  # Our neighbor ...
        multihop;                               # ... which is connected indirectly, other option is "direct;"

        ipv4 {
         import all;
         export none;
        };
}

protocol bgp node_05 {
        neighbor 192.168.91.96 as metallb_asn;  # Our neighbor ...
        multihop;                               # ... which is connected indirectly, other option is "direct;"

        ipv4 {
         import all;
         export none;
        };
}

protocol bgp node_06 {
        neighbor 192.168.92.45 as metallb_asn;  # Our neighbor ...
        multihop;                               # ... which is connected indirectly, other option is "direct;"

        ipv4 {
         import all;
         export none;
        };
}

protocol bgp node_07 {
        neighbor 192.168.90.218 as metallb_asn;  # Our neighbor ...
        multihop;                               # ... which is connected indirectly, other option is "direct;"
        
        ipv4 {
         import all;
         export none;
        };
}

protocol bgp node_08 {
        neighbor 192.168.121.214 as metallb_asn;  # Our neighbor ...
        multihop;                               # ... which is connected indirectly, other option is "direct;"

        ipv4 {
         import all;
         export none;
        };
}

protocol bgp node_09 {
        neighbor 192.168.100.10 as metallb_asn;  # Our neighbor ...
        multihop;                                # ... which is connected indirectly, other option is "direct;"

        ipv4 {
         import all;
         export none;
        };
}
